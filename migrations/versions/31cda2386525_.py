"""empty message

Revision ID: 31cda2386525
Revises: 
Create Date: 2025-05-10 17:50:19.462199

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '31cda2386525'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('company_code', sa.String(length=4), nullable=False),
    sa.Column('admin_code', sa.String(length=6), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_admin_code', 'company', ['admin_code'], unique=False)
    op.create_index('idx_code', 'company', ['company_code'], unique=False)
    op.create_table('department',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=40), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('head_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ),
    sa.ForeignKeyConstraint(['head_user_id'], ['user.id'], deferrable=True, use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_department_company', 'department', ['company_id'], unique=False)
    op.create_index('idx_department_head', 'department', ['head_user_id'], unique=False)
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.String(length=40), nullable=False),
    sa.Column('last_name', sa.String(length=40), nullable=False),
    sa.Column('company_role', sa.Enum('employee', 'manager', 'admin', name='roletype'), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index('idx_email', 'user', ['email'], unique=False)
    op.create_table('meeting',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('organizer_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('meeting_date', sa.Date(), nullable=False),
    sa.Column('meeting_time', sa.Time(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['organizer_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_meeting_company', 'meeting', ['company_id'], unique=False)
    op.create_index('idx_meeting_date_time', 'meeting', ['meeting_date', 'meeting_time'], unique=False)
    op.create_index('idx_meeting_organizer', 'meeting', ['organizer_id'], unique=False)
    op.create_table('news',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_news_company_id', 'news', ['company_id'], unique=False)
    op.create_index('idx_news_owner_id', 'news', ['owner_id'], unique=False)
    op.create_table('task',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('target_id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.Column('title', sa.String(length=400), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.Column('status', sa.Enum('todo', 'in_progress', 'done', name='taskstatus'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['target_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_company_id', 'task', ['company_id'], unique=False)
    op.create_index('idx_start_end_date', 'task', ['start_date', 'end_date'], unique=False)
    op.create_index('idx_status', 'task', ['status'], unique=False)
    op.create_index('idx_target_id', 'task', ['target_id'], unique=False)
    op.create_index('idx_task_owner_id', 'task', ['owner_id'], unique=False)
    op.create_table('calendar',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('event_date', sa.Date(), nullable=False),
    sa.Column('event_time', sa.Time(), nullable=True),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('type_event', sa.Enum('task', 'meeting', name='calendarstatus'), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('meeting_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['meeting_id'], ['meeting.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'event_date', 'event_time', name='uix_user_datetime')
    )
    op.create_index('idx_calendar_date', 'calendar', ['event_date'], unique=False)
    op.create_index('idx_calendar_meeting', 'calendar', ['meeting_id'], unique=False)
    op.create_index('idx_calendar_task', 'calendar', ['task_id'], unique=False)
    op.create_index('idx_calendar_user', 'calendar', ['user_id'], unique=False)
    op.create_table('comment',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('author_id', sa.Integer(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=1024), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_author_id', 'comment', ['author_id'], unique=False)
    op.create_index('idx_task_id', 'comment', ['task_id'], unique=False)
    op.create_table('rating',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=False),
    sa.Column('head_id', sa.Integer(), nullable=False),
    sa.Column('score_date', sa.Integer(), nullable=False),
    sa.Column('score_quality', sa.Integer(), nullable=False),
    sa.Column('score_complete', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['head_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_created_at', 'rating', ['created_at'], unique=False)
    op.create_index('idx_head_id', 'rating', ['head_id'], unique=False)
    op.create_index('idx_rating_owner_id', 'rating', ['owner_id'], unique=False)
    op.create_index('idx_rating_task_id', 'rating', ['task_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_rating_task_id', table_name='rating')
    op.drop_index('idx_rating_owner_id', table_name='rating')
    op.drop_index('idx_head_id', table_name='rating')
    op.drop_index('idx_created_at', table_name='rating')
    op.drop_table('rating')
    op.drop_index('idx_task_id', table_name='comment')
    op.drop_index('idx_author_id', table_name='comment')
    op.drop_table('comment')
    op.drop_index('idx_calendar_user', table_name='calendar')
    op.drop_index('idx_calendar_task', table_name='calendar')
    op.drop_index('idx_calendar_meeting', table_name='calendar')
    op.drop_index('idx_calendar_date', table_name='calendar')
    op.drop_table('calendar')
    op.drop_index('idx_task_owner_id', table_name='task')
    op.drop_index('idx_target_id', table_name='task')
    op.drop_index('idx_status', table_name='task')
    op.drop_index('idx_start_end_date', table_name='task')
    op.drop_index('idx_company_id', table_name='task')
    op.drop_table('task')
    op.drop_index('idx_news_owner_id', table_name='news')
    op.drop_index('idx_news_company_id', table_name='news')
    op.drop_table('news')
    op.drop_index('idx_meeting_organizer', table_name='meeting')
    op.drop_index('idx_meeting_date_time', table_name='meeting')
    op.drop_index('idx_meeting_company', table_name='meeting')
    op.drop_table('meeting')
    op.drop_index('idx_email', table_name='user')
    op.drop_table('user')
    op.drop_index('idx_department_head', table_name='department')
    op.drop_index('idx_department_company', table_name='department')
    op.drop_table('department')
    op.drop_index('idx_code', table_name='company')
    op.drop_index('idx_admin_code', table_name='company')
    op.drop_table('company')
    # ### end Alembic commands ###
